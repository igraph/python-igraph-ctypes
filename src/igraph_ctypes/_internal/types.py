# This file should be autogenerated.

from ctypes import c_double, c_int, c_void_p, POINTER, Structure
from typing import Tuple


###########################################################################
# Mapping of ctypes types to low-level igraph types

igraph_bool_t = c_int
igraph_error_t = c_int
igraph_integer_t = c_int
igraph_real_t = c_double


class igraph_vector_t(Structure):
    """ctypes representation of ``igraph_vector_t``"""

    _fields_ = [
        ("stor_begin", POINTER(igraph_real_t)),
        ("stor_end", POINTER(igraph_real_t)),
        ("end", POINTER(igraph_real_t)),
    ]


class igraph_t(Structure):
    """ctypes representation of ``igraph_t``"""

    _fields_ = [
        ("n", igraph_integer_t),
        ("directed", igraph_bool_t),
        ("from_", igraph_vector_t),
        ("to", igraph_vector_t),
        ("oi", igraph_vector_t),
        ("ii", igraph_vector_t),
        ("os", igraph_vector_t),
        ("is_", igraph_vector_t),
        ("attr", c_void_p),
    ]


igraph_p = POINTER(igraph_t)
igraph_vector_p = POINTER(igraph_vector_t)


###########################################################################
# Type aliases used by the higher level interface

VertexLike = int
"""Type alias for Python types that can be converted to an igraph vertex ID"""

VertexPair = Tuple[VertexLike, VertexLike]
"""A pair of objects that can both be converted into igraph vertex IDs"""
