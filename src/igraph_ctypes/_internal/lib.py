# type: ignore
# Type annotations are ignored in this file because pylance is not smart enough
# to figure out that `restypes` and `argtypes` are valid for a function imported
# from a library
#
# This file should be autogenerated.

from ctypes import cdll, c_void_p
from ctypes.util import find_library

from .errors import handle_igraph_error_t
from .types import (
    igraph_bool_t,
    igraph_integer_t,
    igraph_p,
    igraph_real_t,
    igraph_vector_p,
)


def _load_igraph_c_library():
    """Imports the low-level igraph C library using `ctypes`."""
    candidates = ("igraph", "libigraph")
    for candidate in candidates:
        path = find_library("igraph")
        if path is not None:
            break
    else:
        # Hardcoded path for testing purposes
        path = "/Users/tamas/dev/igraph/igraph/build/src/libigraph.0.dylib"

    lib = cdll.LoadLibrary(path)
    return lib


_lib = _load_igraph_c_library()


igraph_destroy = _lib.igraph_destroy
igraph_destroy.restype = None
igraph_destroy.argtypes = [c_void_p]

igraph_ecount = _lib.igraph_ecount
igraph_ecount.restype = igraph_integer_t
igraph_ecount.argtypes = [igraph_p]

igraph_empty = _lib.igraph_empty
igraph_empty.restype = handle_igraph_error_t
igraph_empty.argtypes = [igraph_p, igraph_integer_t, igraph_bool_t]

igraph_vcount = _lib.igraph_vcount
igraph_vcount.restype = igraph_integer_t
igraph_vcount.argtypes = [igraph_p]

igraph_is_directed = _lib.igraph_is_directed
igraph_is_directed.restype = igraph_bool_t
igraph_is_directed.argtypes = [igraph_p]

igraph_add_vertices = _lib.igraph_add_vertices
igraph_add_vertices.restype = handle_igraph_error_t
igraph_add_vertices.argtypes = [igraph_p, igraph_integer_t, c_void_p]

igraph_add_edges = _lib.igraph_add_edges
igraph_add_edges.restype = handle_igraph_error_t
igraph_add_edges.argtypes = [igraph_p, igraph_vector_p, c_void_p]

igraph_vector_destroy = _lib.igraph_vector_destroy
igraph_vector_destroy.restype = None
igraph_vector_destroy.argtypes = [c_void_p]

igraph_vector_init = _lib.igraph_vector_init
igraph_vector_init.restype = handle_igraph_error_t
igraph_vector_init.argtypes = [igraph_vector_p, igraph_integer_t]

igraph_vector_push_back = _lib.igraph_vector_push_back
igraph_vector_push_back.restype = handle_igraph_error_t
igraph_vector_push_back.argtypes = [igraph_vector_p, igraph_real_t]
